// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SanyaaDelivery.Infra.Data.Context;

namespace SanyaaDelivery.Infra.Data.Migrations
{
    [DbContext(typeof(sanyaadatabaseContext))]
    [Migration("20210724132513_CleanerSubcribersEdit")]
    partial class CleanerSubcribersEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.AddressT", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("address_id");

                    b.Property<short?>("AddressBlockNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("address_block_num")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("AddressCity")
                        .HasColumnName("address_city")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("AddressDes")
                        .HasColumnName("address_des")
                        .HasColumnType("text");

                    b.Property<short?>("AddressFlatNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("address_flat_num")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("AddressGov")
                        .HasColumnName("address_gov")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AddressRegion")
                        .HasColumnName("address_region")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("AddressStreet")
                        .HasColumnName("address_street")
                        .HasColumnType("text");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("Latitude")
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .HasColumnType("varchar(75)");

                    b.HasKey("AddressId");

                    b.ToTable("address_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.BillDetailsT", b =>
                {
                    b.Property<string>("BillNumber")
                        .HasColumnName("bill_number")
                        .HasColumnType("varchar(45)");

                    b.Property<sbyte>("BillType")
                        .HasColumnName("bill_type");

                    b.Property<float>("BillCost")
                        .HasColumnName("bill_cost");

                    b.Property<string>("BillIo")
                        .HasColumnName("bill_io")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BillNote")
                        .HasColumnName("bill_note")
                        .HasColumnType("varchar(20)");

                    b.HasKey("BillNumber", "BillType", "BillCost");

                    b.ToTable("bill_details_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.BillNumberT", b =>
                {
                    b.Property<string>("BillNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bill_number")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("BillTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bill_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("BillNumber");

                    b.HasIndex("RequestId")
                        .HasName("fk_bill_number_t_request_t1_idx");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_bill_number_t_system_user_t1_idx");

                    b.ToTable("bill_number_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.BranchT", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("branch_id");

                    b.Property<int?>("BranchBlockNum")
                        .HasColumnName("branch_block_num");

                    b.Property<string>("BranchCity")
                        .IsRequired()
                        .HasColumnName("branch_city")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BranchDes")
                        .HasColumnName("branch_des")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("BranchFlatNum")
                        .HasColumnName("branch_flat_num");

                    b.Property<string>("BranchGov")
                        .IsRequired()
                        .HasColumnName("branch_gov")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnName("branch_name")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("BranchPhone")
                        .IsRequired()
                        .HasColumnName("branch_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("BranchRegion")
                        .IsRequired()
                        .HasColumnName("branch_region")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BranchStreet")
                        .IsRequired()
                        .HasColumnName("branch_street")
                        .HasColumnType("varchar(45)");

                    b.HasKey("BranchId");

                    b.HasIndex("BranchName")
                        .IsUnique()
                        .HasName("branch_name_UNIQUE");

                    b.HasIndex("BranchPhone")
                        .IsUnique()
                        .HasName("branch_phone_UNIQUE");

                    b.ToTable("branch_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Qte")
                        .HasColumnName("QTE");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.CleaningSubscribersT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<int>("Package");

                    b.Property<DateTime>("SubscribeDate");

                    b.Property<int>("SystemUserId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SystemUserId");

                    b.ToTable("CleaningSubscribers");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ClientPhonesT", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("ClientPhone")
                        .HasColumnName("client_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<sbyte?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code")
                        .HasColumnType("varchar(6)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("PwdUsr")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pwd_usr")
                        .HasColumnType("varchar(40)")
                        .HasDefaultValueSql("''");

                    b.HasKey("ClientId", "ClientPhone");

                    b.HasIndex("ClientPhone")
                        .IsUnique()
                        .HasName("client_phone_UNIQUE");

                    b.ToTable("client_phones_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ClientT", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("client_id");

                    b.Property<int?>("BranchId")
                        .HasColumnName("branch_id");

                    b.Property<string>("ClientEmail")
                        .HasColumnName("client_email")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ClientKnowUs")
                        .HasColumnName("client_know_us")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ClientName")
                        .HasColumnName("client_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ClientNotes")
                        .HasColumnName("client_notes")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("ClientRegDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("client_reg_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int?>("CurrentAddress")
                        .HasColumnName("current_address");

                    b.Property<string>("CurrentPhone")
                        .HasColumnName("current_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<int?>("SystemUserId")
                        .HasColumnName("system_user_id")
                        .HasDefaultValueSql("'500'");

                    b.HasKey("ClientId");

                    b.HasIndex("BranchId")
                        .HasName("fk_client_t_branch_t1_idx");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_client_systemuser_idx");

                    b.ToTable("client_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentEmployeeT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("DepartmentName")
                        .HasColumnName("department_name")
                        .HasColumnType("varchar(25)");

                    b.HasKey("EmployeeId", "DepartmentName");

                    b.HasIndex("DepartmentName")
                        .HasName("fk_department_employee_t_department_t1_idx");

                    b.HasIndex("EmployeeId")
                        .HasName("fk_department_t_has_employee_t_employee_t1_idx");

                    b.ToTable("department_employee_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentSub0T", b =>
                {
                    b.Property<string>("DepartmentSub0")
                        .HasColumnName("department_sub0")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DepartmentName")
                        .HasColumnName("department_name")
                        .HasColumnType("varchar(25)");

                    b.HasKey("DepartmentSub0", "DepartmentName");

                    b.HasIndex("DepartmentName")
                        .HasName("fk_department_sub0_t_department_t1_idx");

                    b.ToTable("department_sub0_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentSub1T", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("department_id");

                    b.Property<string>("DepartmentDes")
                        .HasColumnName("department_des")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnName("department_name")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DepartmentSub0")
                        .IsRequired()
                        .HasColumnName("department_sub0")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DepartmentSub1")
                        .IsRequired()
                        .HasColumnName("department_sub1")
                        .HasColumnType("varchar(25)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentSub0", "DepartmentName")
                        .HasName("fk_department_sub1_t_department_sub0_t1_idx");

                    b.HasIndex("DepartmentName", "DepartmentSub0", "DepartmentSub1")
                        .IsUnique()
                        .HasName("dept");

                    b.ToTable("department_sub1_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentT", b =>
                {
                    b.Property<string>("DepartmentName")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("department_name")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DepartmentImage")
                        .HasColumnName("department_image")
                        .HasColumnType("varchar(10)");

                    b.HasKey("DepartmentName");

                    b.ToTable("department_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DiscountT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<float?>("Discount2")
                        .HasColumnName("discount2");

                    b.Property<float?>("Discount3")
                        .HasColumnName("discount3");

                    b.Property<float?>("Discount4")
                        .HasColumnName("discount4");

                    b.Property<float?>("DiscountMore")
                        .HasColumnName("discount_more");

                    b.HasKey("Id");

                    b.ToTable("discount_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmployeeApproval", b =>
                {
                    b.Property<string>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Approval")
                        .HasColumnName("approval")
                        .HasColumnType("varchar(11)");

                    b.HasKey("EmployeeId");

                    b.ToTable("employee_approval");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmployeeLocation", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Latitude")
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Longitude")
                        .HasColumnType("varchar(75)");

                    b.HasKey("EmployeeId");

                    b.ToTable("employee_location");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmployeeT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("EmployeeBlockNum")
                        .HasColumnName("employee_block_num");

                    b.Property<string>("EmployeeCity")
                        .HasColumnName("employee_city")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeDes")
                        .HasColumnName("employee_des")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeFileNum")
                        .IsRequired()
                        .HasColumnName("employee_file_num")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("EmployeeFlatNum")
                        .HasColumnName("employee_flat_num");

                    b.Property<string>("EmployeeGov")
                        .HasColumnName("employee_gov")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("EmployeeHireDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_hire_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnName("employee_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("EmployeePhone")
                        .IsRequired()
                        .HasColumnName("employee_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EmployeePhone1")
                        .HasColumnName("employee_phone1")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EmployeeRegion")
                        .HasColumnName("employee_region")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeRelativeName")
                        .IsRequired()
                        .HasColumnName("employee_relative_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("EmployeeRelativePhone")
                        .IsRequired()
                        .HasColumnName("employee_relative_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EmployeeStreet")
                        .HasColumnName("employee_street")
                        .HasColumnType("varchar(45)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeFileNum")
                        .IsUnique()
                        .HasName("employee_file_num_UNIQUE");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasName("employee_national_id_UNIQUE");

                    b.HasIndex("EmployeeName")
                        .IsUnique()
                        .HasName("employee_name_UNIQUE");

                    b.HasIndex("EmployeePhone")
                        .IsUnique()
                        .HasName("employee_phone1_UNIQUE");

                    b.HasIndex("EmployeeRelativePhone")
                        .IsUnique()
                        .HasName("employee_relative_num_UNIQUE");

                    b.ToTable("employee_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmployeeWorkplacesT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<int>("BranchId")
                        .HasColumnName("branch_id");

                    b.HasKey("EmployeeId", "BranchId");

                    b.HasIndex("BranchId")
                        .HasName("fk_branch_t_has_employee_t_branch_t1_idx");

                    b.HasIndex("EmployeeId")
                        .HasName("fk_branch_t_has_employee_t_employee_t1_idx");

                    b.ToTable("employee_workplaces_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmploymentApplicationsT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ApplicationStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("application_status")
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("'جديد'");

                    b.Property<int>("BranchId")
                        .HasColumnName("branch_id");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnName("department")
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("EmployeeBlockNum")
                        .HasColumnName("employee_block_num");

                    b.Property<string>("EmployeeDes")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_des")
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("'null'");

                    b.Property<int?>("EmployeeFlatNum")
                        .HasColumnName("employee_flat_num");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnName("employee_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("EmployeePhone")
                        .IsRequired()
                        .HasColumnName("employee_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("EmployeeRelativeName")
                        .IsRequired()
                        .HasColumnName("employee_relative_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("EmployeeRelativePhone")
                        .IsRequired()
                        .HasColumnName("employee_relative_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<double?>("LocationLangitude")
                        .HasColumnName("location_langitude");

                    b.Property<double?>("LocationLatitude")
                        .HasColumnName("location_latitude");

                    b.Property<string>("LocationText")
                        .HasColumnName("location_text")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnName("national_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePhone")
                        .IsUnique()
                        .HasName("employee_phone1_UNIQUE");

                    b.HasIndex("EmployeeRelativePhone")
                        .IsUnique()
                        .HasName("employee_relative_num_UNIQUE");

                    b.HasIndex("NationalId")
                        .IsUnique()
                        .HasName("employee_national_id_UNIQUE");

                    b.ToTable("employment_applications_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FawryChargeRequestT", b =>
                {
                    b.Property<int>("ChargeId")
                        .HasColumnName("charge_id");

                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.HasKey("ChargeId", "RequestId");

                    b.HasIndex("RequestId")
                        .HasName("fk_request_idx");

                    b.ToTable("fawry_charge_request_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FawryChargeT", b =>
                {
                    b.Property<int>("SystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("system_id");

                    b.Property<double?>("ChargeAmount")
                        .HasColumnName("charge_amount");

                    b.Property<DateTime?>("ChargeExpireDate")
                        .HasColumnName("charge_expire_date")
                        .HasColumnType("datetime");

                    b.Property<string>("ChargeStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("charge_status")
                        .HasColumnType("varchar(40)")
                        .HasDefaultValueSql("'NEW'");

                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("FawryRefNumber")
                        .HasColumnName("fawry_ref_number");

                    b.Property<bool?>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_confirmed")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("'b\\'0\\''");

                    b.Property<DateTime?>("RecordTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("record_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.HasKey("SystemId");

                    b.HasIndex("EmployeeId")
                        .HasName("fk_fawry_charge_t_employee_t_idx");

                    b.HasIndex("FawryRefNumber")
                        .HasName("fk_fawry_charge_t_idx");

                    b.ToTable("fawry_charge_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FiredStaffT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("FiredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fired_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("FiredReasons")
                        .IsRequired()
                        .HasColumnName("fired_reasons")
                        .HasColumnType("varchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("fired_staff_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FollowUpT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Behavior")
                        .HasColumnName("behavior")
                        .HasColumnType("varchar(15)");

                    b.Property<sbyte?>("Cleaness")
                        .HasColumnName("cleaness");

                    b.Property<float?>("Paid")
                        .HasColumnName("paid");

                    b.Property<string>("Prices")
                        .HasColumnName("prices")
                        .HasColumnType("varchar(15)");

                    b.Property<sbyte?>("Product")
                        .HasColumnName("product");

                    b.Property<float?>("ProductCost")
                        .HasColumnName("product_cost");

                    b.Property<sbyte?>("Rate")
                        .HasColumnName("rate");

                    b.Property<string>("Reason")
                        .HasColumnName("reason")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnName("review")
                        .HasColumnType("text");

                    b.Property<int?>("SystemUserId")
                        .HasColumnName("system_user_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("Time")
                        .HasColumnName("time");

                    b.Property<sbyte?>("Tps")
                        .HasColumnName("tps");

                    b.HasKey("RequestId", "Timestamp");

                    b.HasIndex("SystemUserId")
                        .HasName("system_user_fk_idx");

                    b.ToTable("follow_up_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.IncreaseDiscountT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("IncreaseDiscountReason")
                        .HasColumnName("increase_discount_reason")
                        .HasColumnType("varchar(45)");

                    b.Property<sbyte>("IncreaseDiscountType")
                        .HasColumnName("increase_discount_type");

                    b.Property<short>("IncreaseDiscountValue")
                        .HasColumnName("increase_discount_value");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("EmployeeId", "Timestamp", "IncreaseDiscountReason");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_increase_discount_t_system_user_t1_idx");

                    b.ToTable("increase_discount_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.LoginT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("LastActiveTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("last_active_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("LoginAccountDeactiveMessage")
                        .HasColumnName("login_account_deactive_message")
                        .HasColumnType("varchar(150)");

                    b.Property<sbyte>("LoginAccountState")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("login_account_state")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("LoginAvailability")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("login_availability")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'فارغ'");

                    b.Property<string>("LoginMessage")
                        .HasColumnName("login_message")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LoginPassword")
                        .IsRequired()
                        .HasColumnName("login_password")
                        .HasColumnType("varchar(45)");

                    b.HasKey("EmployeeId");

                    b.ToTable("login_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.MessagesT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("MessageTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("message_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Body")
                        .HasColumnName("body")
                        .HasColumnType("text");

                    b.Property<sbyte?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_read")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("varchar(30)");

                    b.HasKey("EmployeeId", "MessageTimestamp");

                    b.ToTable("messages_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnName("body")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PartinerCartT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ServiceCount")
                        .HasColumnName("service_count");

                    b.Property<int>("ServiceId")
                        .HasColumnName("service_id");

                    b.Property<string>("SystemUsername")
                        .IsRequired()
                        .HasColumnName("system_username")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("partiner_cart_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PartinerPaymentRequestT", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnName("payment_id");

                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.HasKey("PaymentId", "RequestId");

                    b.HasIndex("RequestId")
                        .HasName("partiner_request_fk_idx");

                    b.ToTable("partiner_payment_request_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PartinerPaymentT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<double?>("Amount")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnName("date_from")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnName("date_to")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RecordTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("record_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("Id");

                    b.HasIndex("SystemUserId")
                        .HasName("partiner_systemuser_fk_idx");

                    b.ToTable("partiner_payment_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PaymentT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<double>("Payment")
                        .HasColumnName("payment");

                    b.Property<DateTime>("PaymentTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("payment_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("RequestId");

                    b.HasIndex("RequestId")
                        .IsUnique()
                        .HasName("fk_payment_t_request_t1_idx");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_payment_t_system_user_t1_idx");

                    b.ToTable("payment_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.Poll", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("request_id");

                    b.Property<string>("Employee")
                        .IsRequired()
                        .HasColumnName("employee")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Employee2")
                        .IsRequired()
                        .HasColumnName("employee2")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Knowme")
                        .IsRequired()
                        .HasColumnName("knowme")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnName("note")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnName("place")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnName("price")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnName("time")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Vote")
                        .IsRequired()
                        .HasColumnName("vote")
                        .HasColumnType("varchar(25)");

                    b.HasKey("RequestId");

                    b.ToTable("poll");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ProductReceiptT", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("receipt_id");

                    b.Property<int?>("BranchId")
                        .HasColumnName("branch_id");

                    b.Property<float?>("ProductReceiptPaid")
                        .HasColumnName("product_receipt_paid");

                    b.Property<string>("ReceiptEmployeeBuyer")
                        .HasColumnName("receipt_employee_buyer")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("ReceiptTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("receipt_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("SystemUsername")
                        .HasColumnName("system_username")
                        .HasColumnType("varchar(45)");

                    b.HasKey("ReceiptId");

                    b.ToTable("product_receipt_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ProductSoldT", b =>
                {
                    b.Property<int>("ReceiptId")
                        .HasColumnName("receipt_id");

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductSoldNote")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("product_sold_note")
                        .HasColumnType("varchar(5)")
                        .HasDefaultValueSql("''");

                    b.Property<float?>("ProductSoldPrice")
                        .HasColumnName("product_sold_price");

                    b.Property<short?>("ProductSoldQuantity")
                        .HasColumnName("product_sold_quantity");

                    b.HasKey("ReceiptId", "ProductId", "ProductSoldNote");

                    b.HasIndex("ProductId")
                        .HasName("fk_product_receipt_t_has_product_t_product_t1_idx");

                    b.HasIndex("ReceiptId")
                        .HasName("fk_product_receipt_t_has_product_t_product_receipt_t1_idx");

                    b.ToTable("product_sold_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ProductT", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("product_id");

                    b.Property<int>("BranchId")
                        .HasColumnName("branch_id");

                    b.Property<float>("ProductCustomerPrice")
                        .HasColumnName("product_customer_price");

                    b.Property<string>("ProductDepartment")
                        .HasColumnName("product_department")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ProductDes")
                        .HasColumnName("product_des")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnName("product_name")
                        .HasColumnType("varchar(45)");

                    b.Property<float>("ProductPriceBuy")
                        .HasColumnName("product_price_buy");

                    b.Property<float>("ProductPriceSell")
                        .HasColumnName("product_price_sell");

                    b.Property<short>("ProductQuantity")
                        .HasColumnName("product_quantity");

                    b.HasKey("ProductId");

                    b.HasIndex("BranchId")
                        .HasName("fk_products_t_branch_t1_idx");

                    b.HasIndex("ProductName")
                        .IsUnique()
                        .HasName("product_name_UNIQUE");

                    b.ToTable("product_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.Promocode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DateEx")
                        .IsRequired()
                        .HasColumnName("Date_Ex")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DisAmount")
                        .IsRequired()
                        .HasColumnName("Dis_Amount")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DisPercent")
                        .IsRequired()
                        .HasColumnName("Dis_Percent")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MinimumCharge")
                        .IsRequired()
                        .HasColumnName("Minimum_Charge")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NumMax")
                        .IsRequired()
                        .HasColumnName("Num_Max")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NumNow")
                        .IsRequired()
                        .HasColumnName("Num_Now")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("User_ID")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("promocode");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.QuantityHistoryT", b =>
                {
                    b.Property<DateTime>("QuantityTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("quantity_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id");

                    b.Property<short?>("QuantityHistory")
                        .HasColumnName("quantity_history");

                    b.Property<string>("SystemUsername")
                        .HasColumnName("system_username")
                        .HasColumnType("varchar(45)");

                    b.HasKey("QuantityTimestamp", "ProductId");

                    b.HasIndex("ProductId")
                        .HasName("fk_quantity_history_t_product_t1_idx");

                    b.ToTable("quantity_history_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RegestrationT", b =>
                {
                    b.Property<string>("RegestrationName")
                        .HasColumnName("regestration_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("RegestrationPhone")
                        .HasColumnName("regestration_phone")
                        .HasColumnType("varchar(11)");

                    b.Property<sbyte>("RegestrationAge")
                        .HasColumnName("regestration_age");

                    b.Property<string>("RegestrationCity")
                        .IsRequired()
                        .HasColumnName("regestration_city")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("RegestrationDepartment")
                        .IsRequired()
                        .HasColumnName("regestration_department")
                        .HasColumnType("varchar(25)");

                    b.Property<sbyte>("RegestrationExperience")
                        .HasColumnName("regestration_experience");

                    b.Property<string>("RegestrationGov")
                        .IsRequired()
                        .HasColumnName("regestration_gov")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RegestrationPassword")
                        .IsRequired()
                        .HasColumnName("regestration_password")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("RegestrationTimestamep")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("regestration_timestamep")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("RegestrationTransport")
                        .HasColumnName("regestration_transport")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("RegestrationView")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("regestration_view")
                        .HasColumnType("varchar(6)")
                        .HasDefaultValueSql("'لا'");

                    b.HasKey("RegestrationName", "RegestrationPhone");

                    b.HasIndex("RegestrationPhone")
                        .IsUnique()
                        .HasName("regestration_phone_UNIQUE");

                    b.ToTable("regestration_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RejectRequestT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("RejectRequestTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reject_request_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int?>("RequestId")
                        .HasColumnName("request_id");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasName("fk_reject_request_t_employee_t1_idx");

                    b.HasIndex("RequestId")
                        .HasName("fk_reject_request_t_request_t1_idx");

                    b.ToTable("reject_request_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestCanceledT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<DateTime>("CancelRequestTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cancel_request_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("CancelRequestReason")
                        .IsRequired()
                        .HasColumnName("cancel_request_reason")
                        .HasColumnType("text");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("RequestId", "CancelRequestTimestamp");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_cancel_request_t_system_user_t1_idx");

                    b.ToTable("request_canceled_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestComplaintT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<DateTime>("ComplaintTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("complaint_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("ComplaintDes")
                        .HasColumnName("complaint_des")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ComplaintIsSolved")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("complaint_is_solved")
                        .HasColumnType("varchar(3)")
                        .HasDefaultValueSql("'لا'");

                    b.Property<int?>("NewRequestId")
                        .HasColumnName("new_request_id");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("RequestId", "ComplaintTimestamp");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_request_complaint_t_system_users_t1_idx");

                    b.HasIndex("RequestId", "NewRequestId")
                        .HasName("fk_request_complaint_t_request_t1_idx");

                    b.ToTable("request_complaint_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestDelayedT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<DateTime>("DelayRequestTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("delay_request_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime>("DelayRequestNewTimestamp")
                        .HasColumnName("delay_request_new_timestamp")
                        .HasColumnType("datetime");

                    b.Property<string>("DelayRequestReason")
                        .IsRequired()
                        .HasColumnName("delay_request_reason")
                        .HasColumnType("text");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("RequestId", "DelayRequestTimestamp");

                    b.HasIndex("RequestId")
                        .HasName("fk_delay_requests_t_requests_t1_idx");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_delay_request_t_system_user_t1_idx");

                    b.ToTable("request_delayed_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestServicesT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<int>("ServiceId")
                        .HasColumnName("service_id");

                    b.Property<DateTime?>("AddTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("add_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<sbyte>("RequestServicesQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("request_services_quantity")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("RequestId", "ServiceId");

                    b.HasIndex("RequestId")
                        .HasName("fk_requests_t_has_service_t_requests_t1_idx");

                    b.HasIndex("ServiceId")
                        .HasName("fk_requests_t_has_service_t_service_t1_idx");

                    b.ToTable("request_services_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestStagesT", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnName("request_id");

                    b.Property<DateTime?>("AcceptTimestamp")
                        .HasColumnName("accept_timestamp")
                        .HasColumnType("datetime");

                    b.Property<float?>("Cost")
                        .HasColumnName("cost");

                    b.Property<DateTime?>("FinishTimestamp")
                        .HasColumnName("finish_timestamp")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("PaymentFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("payment_flag")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("ReceiveTimestamp")
                        .HasColumnName("receive_timestamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SentTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sent_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.HasKey("RequestId");

                    b.HasIndex("RequestId")
                        .IsUnique()
                        .HasName("fk_request_stages_request_t1_idx");

                    b.ToTable("request_stages_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestT", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("request_id");

                    b.Property<int>("BranchId")
                        .HasColumnName("branch_id");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id");

                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("RequestCurrentTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("request_current_timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("RequestNote")
                        .HasColumnName("request_note")
                        .HasColumnType("text");

                    b.Property<sbyte>("RequestStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("request_status")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("RequestTimestamp")
                        .HasColumnName("request_timestamp")
                        .HasColumnType("datetime");

                    b.Property<int>("SystemUserId")
                        .HasColumnName("system_user_id");

                    b.HasKey("RequestId");

                    b.HasIndex("BranchId")
                        .HasName("fk_request_t_branch_t1_idx");

                    b.HasIndex("ClientId")
                        .HasName("fk_requests_t_clients_t1_idx");

                    b.HasIndex("EmployeeId")
                        .HasName("fk_request_t_employee_t1_idx");

                    b.HasIndex("SystemUserId")
                        .HasName("fk_request_t_system_user_t1_idx");

                    b.ToTable("request_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ServiceT", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_id");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("department_id");

                    b.Property<short>("ServiceCost")
                        .HasColumnName("service_cost");

                    b.Property<string>("ServiceDes")
                        .HasColumnName("service_des")
                        .HasColumnType("varchar(150)");

                    b.Property<float>("ServiceDuration")
                        .HasColumnName("service_duration");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnName("service_name")
                        .HasColumnType("varchar(45)");

                    b.HasKey("ServiceId");

                    b.HasIndex("DepartmentId")
                        .HasName("fk_service_t_department_sub1t1_idx");

                    b.ToTable("service_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.SettingT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool?>("FawryAutoUpdateStausFlag")
                        .HasColumnName("fawry_auto_update_staus_flag")
                        .HasColumnType("bit(1)");

                    b.Property<bool?>("FawryAutopayFlag")
                        .HasColumnName("fawry_autopay_flag")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("FawryPaySendDate")
                        .HasColumnName("fawry_pay_send_date")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("setting_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.SystemUserT", b =>
                {
                    b.Property<int>("SystemUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("system_user_id");

                    b.Property<int>("BranchId")
                        .HasColumnName("branch_id");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("SystemUserLevel")
                        .IsRequired()
                        .HasColumnName("system_user_level")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SystemUserPass")
                        .IsRequired()
                        .HasColumnName("system_user_pass")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SystemUserUsername")
                        .IsRequired()
                        .HasColumnName("system_user_username")
                        .HasColumnType("varchar(45)");

                    b.HasKey("SystemUserId");

                    b.HasIndex("BranchId")
                        .HasName("fk_system_users_t_branch_t1_idx");

                    b.HasIndex("EmployeeId")
                        .HasName("fk_system_users_t_employee_t1_idx");

                    b.HasIndex("SystemUserUsername")
                        .IsUnique()
                        .HasName("system_user_username_UNIQUE");

                    b.ToTable("system_user_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.TimetableT", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("TimetableDate")
                        .HasColumnName("timetable_date")
                        .HasColumnType("date");

                    b.Property<sbyte>("Timetable1")
                        .HasColumnName("timetable_1");

                    b.Property<sbyte>("Timetable10")
                        .HasColumnName("timetable_10");

                    b.Property<sbyte>("Timetable4")
                        .HasColumnName("timetable_4");

                    b.Property<sbyte>("Timetable7")
                        .HasColumnName("timetable_7");

                    b.Property<sbyte>("Timetable9")
                        .HasColumnName("timetable_9");

                    b.HasKey("EmployeeId", "TimetableDate");

                    b.ToTable("timetable_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.VersionT", b =>
                {
                    b.Property<int>("VersionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version_number");

                    b.HasKey("VersionNumber");

                    b.ToTable("version_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.WorkingAreaT", b =>
                {
                    b.Property<string>("WorkingAreaGov")
                        .HasColumnName("working_area_gov")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("WorkingAreaCity")
                        .HasColumnName("working_area_city")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("WorkingAreaRegion")
                        .HasColumnName("working_area_region")
                        .HasColumnType("varchar(25)");

                    b.Property<int>("BranchId")
                        .HasColumnName("branch_id");

                    b.HasKey("WorkingAreaGov", "WorkingAreaCity", "WorkingAreaRegion");

                    b.HasIndex("BranchId")
                        .HasName("fk_work_areas_branch_t1_idx");

                    b.ToTable("working_area_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.BillDetailsT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BillNumberT", "BillNumberNavigation")
                        .WithMany("BillDetailsT")
                        .HasForeignKey("BillNumber")
                        .HasConstraintName("fk_bill_details_t_bill_number_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.BillNumberT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("BillNumberT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_bill_number_t_request_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("BillNumberT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_bill_number_t_system_user_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.CleaningSubscribersT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.ClientT", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany()
                        .HasForeignKey("SystemUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ClientT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BranchT", "Branch")
                        .WithMany("ClientT")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("fk_client_t_branch_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("ClientT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_client_systemuser");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentEmployeeT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.DepartmentT", "DepartmentNameNavigation")
                        .WithMany("DepartmentEmployeeT")
                        .HasForeignKey("DepartmentName")
                        .HasConstraintName("fk_department_employee_t_department_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("DepartmentEmployeeT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_department_t_has_employee_t_employee_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentSub0T", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.DepartmentT", "DepartmentNameNavigation")
                        .WithMany("DepartmentSub0T")
                        .HasForeignKey("DepartmentName")
                        .HasConstraintName("fk_department_sub0_t_department_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.DepartmentSub1T", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.DepartmentSub0T", "Department")
                        .WithMany("DepartmentSub1T")
                        .HasForeignKey("DepartmentSub0", "DepartmentName")
                        .HasConstraintName("fk_department_sub1_t_department_sub0_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmployeeLocation", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithOne("EmployeeLocation")
                        .HasForeignKey("SanyaaDelivery.Domain.Models.EmployeeLocation", "EmployeeId")
                        .HasConstraintName("fk_employee_location")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.EmployeeWorkplacesT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BranchT", "Branch")
                        .WithMany("EmployeeWorkplacesT")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("fk_branch_t_has_employee_t_branch_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("EmployeeWorkplacesT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_branch_t_has_employee_t_employee_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FawryChargeRequestT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.FawryChargeT", "Charge")
                        .WithMany("FawryChargeRequestT")
                        .HasForeignKey("ChargeId")
                        .HasConstraintName("fk_fawry_charge")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("FawryChargeRequestT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_request");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FawryChargeT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("FawryChargeT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_fawry_charge_t_employee_t");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FiredStaffT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithOne("FiredStaffT")
                        .HasForeignKey("SanyaaDelivery.Domain.Models.FiredStaffT", "EmployeeId")
                        .HasConstraintName("fk_fired_staff_t_employee_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.FollowUpT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("FollowUpT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("request_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("FollowUpT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("system_user_fk");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.IncreaseDiscountT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("IncreaseDiscountT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_increase_discount_t_employee_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("IncreaseDiscountT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_increase_discount_t_system_user_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.LoginT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithOne("LoginT")
                        .HasForeignKey("SanyaaDelivery.Domain.Models.LoginT", "EmployeeId")
                        .HasConstraintName("fk_login_t_employee_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.MessagesT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("MessagesT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_employee_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PartinerPaymentRequestT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.PartinerPaymentT", "Payment")
                        .WithMany("PartinerPaymentRequestT")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("partiner_payment_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("PartinerPaymentRequestT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("partiner_request_fk");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PartinerPaymentT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("PartinerPaymentT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("partiner_systemuser_fk");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.PaymentT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithOne("PaymentT")
                        .HasForeignKey("SanyaaDelivery.Domain.Models.PaymentT", "RequestId")
                        .HasConstraintName("fk_payment_t_request_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("PaymentT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_payment_t_system_user_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ProductSoldT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.ProductT", "Product")
                        .WithMany("ProductSoldT")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_receipt_t_has_product_t_product_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.ProductReceiptT", "Receipt")
                        .WithMany("ProductSoldT")
                        .HasForeignKey("ReceiptId")
                        .HasConstraintName("fk_product_receipt_t_has_product_t_product_receipt_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ProductT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BranchT", "Branch")
                        .WithMany("ProductT")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("fk_products_t_branch_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.QuantityHistoryT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.ProductT", "Product")
                        .WithMany("QuantityHistoryT")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_quantity_history_t_product_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RejectRequestT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("RejectRequestT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_reject_request_t_employee_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestCanceledT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("RequestCanceledT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_cancel_requests_t_requests_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("RequestCanceledT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_cancel_request_t_system_user_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestComplaintT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("RequestComplaintT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_request_complaint_t_request_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("RequestComplaintT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_request_complaint_t_system_users_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestDelayedT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("RequestDelayedT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_delay_requests_t_requests_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("RequestDelayedT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_delay_request_t_system_user_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestServicesT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithMany("RequestServicesT")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("fk_requests_t_has_service_t_requests_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.ServiceT", "Service")
                        .WithMany("RequestServicesT")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("fk_requests_t_has_service_t_service_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestStagesT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.RequestT", "Request")
                        .WithOne("RequestStagesT")
                        .HasForeignKey("SanyaaDelivery.Domain.Models.RequestStagesT", "RequestId")
                        .HasConstraintName("fk_request_stages_request_t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.RequestT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BranchT", "Branch")
                        .WithMany("RequestT")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("fk_request_t_branch_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.ClientT", "Client")
                        .WithMany("RequestT")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_requests_t_clients_t1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("RequestT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_request_t_employee_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.SystemUserT", "SystemUser")
                        .WithMany("RequestT")
                        .HasForeignKey("SystemUserId")
                        .HasConstraintName("fk_request_t_system_user_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.ServiceT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.DepartmentSub1T", "Department")
                        .WithMany("ServiceT")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("fk_service_t_department_sub1t1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.SystemUserT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BranchT", "Branch")
                        .WithMany("SystemUserT")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("fk_system_users_t_branch_t1");

                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("SystemUserT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_system_users_t_employee_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.TimetableT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.EmployeeT", "Employee")
                        .WithMany("TimetableT")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_timetable_t_employee_t1");
                });

            modelBuilder.Entity("SanyaaDelivery.Domain.Models.WorkingAreaT", b =>
                {
                    b.HasOne("SanyaaDelivery.Domain.Models.BranchT", "Branch")
                        .WithMany("WorkingAreaT")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("fk_work_areas_branch_t1");
                });
#pragma warning restore 612, 618
        }
    }
}
